version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8083:8083"
    depends_on:
      db:
        condition: service_healthy
      ipfs:
        condition: service_started
    environment:
      IPFS_ADDRESS: "http://ipfs:5001"
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      SSL_MODE: disable
    env_file:
      - .env
    secrets:
      - jwt_secret
      - db_password
    volumes:
      - app-data:/app/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    mem_limit: 512m
    cpus: 0.5
    networks:
      - app-db
      - app-frontend
      - app-ipfs

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
    env_file:
      - .env
    secrets:
      - db_password
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    mem_limit: 256m
    cpus: 0.3
    networks:
      - app-db

  ipfs:
    image: ipfs/go-ipfs:latest
    volumes:
      - ipfs-staging:/export
      - ipfs-data:/data/ipfs
    mem_limit: 1024m
    cpus: 0.7
    networks:
      - app-ipfs

  frontend:
    build:
      context: ${REACT_APP_DOCKERFILE}
      dockerfile: Dockerfile
      args:
        REACT_APP_BACK_END_API_BASE_URL: ${REACT_APP_BACK_END_API_BASE_URL}
    ports:
      - "80:80"
    depends_on:
      - app
    env_file:
      - .env
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    mem_limit: 256m
    cpus: 0.3
    networks:
      - app-frontend

volumes:
  db-data:
  ipfs-staging:
  ipfs-data:
  app-data:

secrets:
  jwt_secret:
    file: ./secrets/jwt_secret.txt
  db_password:
    file: ./secrets/db_password.txt

networks:
  app-db:
    name: myapp-app-db
  app-frontend:
    name: myapp-app-frontend
  app-ipfs:
    name: myapp-app-ipfs
